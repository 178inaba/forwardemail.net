---
- hosts: all
  become: true
  handlers:
    - name: restart ssh
      service: name=ssh state=restarted
  vars:
    copy_local_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    timezone_zone: 'America/Chicago'
  roles:
    # https://github.com/Oefenweb/ansible-swapfile
    - role: swapfile
      swapfile_size: 4GB
      swapfile_swappiness: 10
      swapfile_vfs_cache_pressure: 50

    # https://github.com/Oefenweb/ansible-dns
    - role: dns
      #
      # we are currently using Google since
      # Cloudflare has consistent and unreported outages
      # (e.g. TXT and MX lookups returning back false data)
      #
      dns_nameservers:
        - '8.8.8.8'
        - '8.8.4.4'

    # https://github.com/Oefenweb/ansible-ntp
    - role: ntp
      ntp_servers:
        - 'time.cloudflare.com'

    # https://github.com/Oefenweb/ansible-timezone
    - role: timezone
      timezone_zone: '{{ timezone_zone }}'

    # https://github.com/Oefenweb/ansible-fail2ban
    - role: fail2ban

    # https://github.com/jnv/ansible-role-unattended-upgrades
    - role: unattended-upgrades

    # TODO: set up logrotate for all roles/deps
    #       https://github.com/Oefenweb/ansible-logrotated

  tasks:
    # update deps
    - name: update apt
      apt:
        update_cache: true

    - name: upgrade deps
      apt:
        upgrade: safe

    # create devops group
    - name: create devops group
      group:
        name: devops
        state: present

    - name: set devops group to have sudo access
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: ^%devops
        line: '%devops ALL=(ALL) NOPASSWD: ALL'
        validate: /usr/sbin/visudo -cf %s

    # create devops user (with sudo)
    - name: create a devops user with sudo privileges
      user:
        name: devops
        state: present
        groups: devops
        append: true
        create_home: true
        shell: /bin/bash

    - name: set authorized key for devops user
      authorized_key:
        user: devops
        state: present
        key: '{{ copy_local_key }}'

    # configure ssh
    - name: disable root login
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: PermitRootLogin no
      notify: restart ssh

    - name: disable password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify: restart ssh
